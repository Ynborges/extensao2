const prisma = require('./prisma');
const { hashPassword } = require('../utils/auth');

async function main() {
  console.log('üå± Iniciando seed do banco de dados...');

  // Criar categorias de curso
  const categorias = await prisma.categoriaCurso.createMany({
    data: [
      { nome: 'Tecnologia da Informa√ß√£o' },
      { nome: 'Log√≠stica' },
      { nome: 'Metalmec√¢nica' },
      { nome: 'Eletroeletr√¥nica' },
      { nome: 'Constru√ß√£o Civil' },
      { nome: 'Administra√ß√£o' },
      { nome: 'Sa√∫de' },
      { nome: 'Turismo e Hospitalidade' }
    ],
    skipDuplicates: true
  });

  // Criar usu√°rio admin
  const adminPassword = await hashPassword('admin123');
  const admin = await prisma.usuario.upsert({
    where: { email: 'admin@plataforma.com' },
    update: {},
    create: {
      nomeCompleto: 'Administrador do Sistema',
      email: 'admin@plataforma.com',
      senha: adminPassword,
      tipoUsuario: 'admin',
      emailConfirmado: true
    }
  });

  // Criar usu√°rio institui√ß√£o de exemplo
  const instituicaoPassword = await hashPassword('instituicao123');
  const instituicaoUser = await prisma.usuario.upsert({
    where: { email: 'senai@exemplo.com' },
    update: {},
    create: {
      nomeCompleto: 'SENAI Amazonas',
      email: 'senai@exemplo.com',
      senha: instituicaoPassword,
      tipoUsuario: 'instituicao',
      emailConfirmado: true
    }
  });

  const instituicao = await prisma.perfilInstituicao.upsert({
    where: { usuarioId: instituicaoUser.id },
    update: {},
    create: {
      usuarioId: instituicaoUser.id,
      nomeInstituicao: 'SENAI Amazonas',
      descricao: 'Servi√ßo Nacional de Aprendizagem Industrial do Amazonas, oferecendo cursos t√©cnicos e profissionalizantes de qualidade.',
      urlSite: 'https://senai-am.com.br'
    }
  });

  // Criar usu√°rio estudante de exemplo
  const estudantePassword = await hashPassword('estudante123');
  const estudanteUser = await prisma.usuario.upsert({
    where: { email: 'joao@exemplo.com' },
    update: {},
    create: {
      nomeCompleto: 'Jo√£o Silva Santos',
      email: 'joao@exemplo.com',
      senha: estudantePassword,
      tipoUsuario: 'estudante',
      emailConfirmado: true
    }
  });

  const estudante = await prisma.perfilEstudante.upsert({
    where: { usuarioId: estudanteUser.id },
    update: {},
    create: {
      usuarioId: estudanteUser.id,
      nomeEscola: 'Escola Estadual Amazonas',
      areaInteressePrincipal: 'Tecnologia da Informa√ß√£o'
    }
  });

  // Criar postagem de blog de exemplo
  await prisma.postagemBlog.upsert({
    where: { slug: 'mercado-trabalho-amazonas-2024' },
    update: {},
    create: {
      autorId: admin.id,
      titulo: 'Mercado de Trabalho no Amazonas: Oportunidades em 2024',
      conteudo: `
        <p>O mercado de trabalho no Amazonas est√° em constante evolu√ß√£o, com novas oportunidades surgindo especialmente nas √°reas de tecnologia, log√≠stica e ind√∫stria.</p>
        
        <h2>Setores em Crescimento</h2>
        <p>A ind√∫stria do Amazonas necessitar√° de 175 mil profissionais qualificados at√© 2027, principalmente nas √°reas de:</p>
        <ul>
          <li>Log√≠stica e Supply Chain</li>
          <li>Metalmec√¢nica</li>
          <li>Eletroeletr√¥nica</li>
          <li>Constru√ß√£o Civil</li>
          <li>Tecnologia da Informa√ß√£o</li>
        </ul>
        
        <h2>Import√¢ncia da Qualifica√ß√£o</h2>
        <p>A qualifica√ß√£o profissional √© fundamental para aproveitar essas oportunidades. Os cursos t√©cnicos e profissionalizantes s√£o uma excelente forma de se preparar para o mercado de trabalho.</p>
      `,
      slug: 'mercado-trabalho-amazonas-2024',
      publicadoEm: new Date()
    }
  });

  console.log('‚úÖ Seed conclu√≠do com sucesso!');
  console.log('üë§ Admin: admin@plataforma.com / admin123');
  console.log('üè¢ Institui√ß√£o: senai@exemplo.com / instituicao123');
  console.log('üéì Estudante: joao@exemplo.com / estudante123');
}

main()
  .catch((e) => {
    console.error('‚ùå Erro no seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });